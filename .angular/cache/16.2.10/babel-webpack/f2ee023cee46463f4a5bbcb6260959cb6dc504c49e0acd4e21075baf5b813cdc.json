{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.urlApi = 'http://localhost:8080/api/skus';\n    this.status = \"\";\n    this.errorMessage = \"\";\n  }\n  getData() {\n    return this.http.get(this.urlApi);\n  }\n  getSkuById(id) {\n    return this.http.get(this.urlApi + \"/\" + id);\n  }\n  getDataBySku(sku) {\n    return this.http.get(this.urlApi + \"/sku/\" + sku);\n  }\n  deleteproduct(id) {\n    let ruta = 'http://localhost:8080/api/skus/' + id;\n    this.http.delete(ruta).subscribe({\n      next: data => {\n        this.status = 'Delete successful';\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        console.error('There was an error!', error);\n      }\n    });\n    console.log(ruta);\n  }\n  saveSku(form) {\n    console.log(form);\n    this.http.post(this.urlApi, form).subscribe({\n      next: data => {\n        this.status = 'Save successful';\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        console.error('There was an error!', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ApiService };","map":{"version":3,"names":["ApiService","constructor","http","urlApi","status","errorMessage","getData","get","getSkuById","id","getDataBySku","sku","deleteproduct","ruta","delete","subscribe","next","data","error","message","console","log","saveSku","form","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BRANDON\\Documents\\angular\\angularapi\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport {Sku} from '../modelos/sku.interface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private urlApi = 'http://localhost:8080/api/skus';\n  private  status = \"\";\n  private  errorMessage = \"\";\n\n  constructor(private http: HttpClient) { }\n\n  public getData() : Observable<Sku[]> {\n    return this.http.get<Sku[]>(this.urlApi);\n  }\n\n  public getSkuById(id: number) : Observable<Sku> {\n    return this.http.get<Sku>(this.urlApi+\"/\"+ id);\n  }\n\n  public getDataBySku(sku:number) : Observable<any> {\n    return this.http.get<any>(this.urlApi+ \"/sku/\" + sku);\n  }\n\n\n    public deleteproduct (id: number): void{\n      let ruta = 'http://localhost:8080/api/skus/'+ id;\n      this.http.delete(ruta)\n        .subscribe({\n            next: data => { \n                this.status = 'Delete successful';\n            },\n            error: error => {\n                this.errorMessage = error.message;\n                console.error('There was an error!', error);\n            }\n        });\n      console.log(ruta);\n      \n      \n\n    }\n    saveSku(form:Sku): void{\n      console.log(form);\n      this.http.post(this.urlApi,form)\n        .subscribe({\n            next: data => { \n                this.status = 'Save successful';\n            },\n            error: error => {\n                this.errorMessage = error.message;\n                console.error('There was an error!', error);\n            }\n        });\n    }\n}\n"],"mappings":";;AAOA,MAGaA,UAAU;EAKrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,gCAAgC;IACxC,KAAAC,MAAM,GAAG,EAAE;IACX,KAAAC,YAAY,GAAG,EAAE;EAEc;EAEjCC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACJ,MAAM,CAAC;EAC1C;EAEOK,UAAUA,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,MAAM,GAAC,GAAG,GAAEM,EAAE,CAAC;EAChD;EAEOC,YAAYA,CAACC,GAAU;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,MAAM,GAAE,OAAO,GAAGQ,GAAG,CAAC;EACvD;EAGSC,aAAaA,CAAEH,EAAU;IAC9B,IAAII,IAAI,GAAG,iCAAiC,GAAEJ,EAAE;IAChD,IAAI,CAACP,IAAI,CAACY,MAAM,CAACD,IAAI,CAAC,CACnBE,SAAS,CAAC;MACPC,IAAI,EAAEC,IAAI,IAAG;QACT,IAAI,CAACb,MAAM,GAAG,mBAAmB;MACrC,CAAC;MACDc,KAAK,EAAEA,KAAK,IAAG;QACX,IAAI,CAACb,YAAY,GAAGa,KAAK,CAACC,OAAO;QACjCC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C;KACH,CAAC;IACJE,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EAInB;EACAS,OAAOA,CAACC,IAAQ;IACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjB,IAAI,CAACrB,IAAI,CAACsB,IAAI,CAAC,IAAI,CAACrB,MAAM,EAACoB,IAAI,CAAC,CAC7BR,SAAS,CAAC;MACPC,IAAI,EAAEC,IAAI,IAAG;QACT,IAAI,CAACb,MAAM,GAAG,iBAAiB;MACnC,CAAC;MACDc,KAAK,EAAEA,KAAK,IAAG;QACX,IAAI,CAACb,YAAY,GAAGa,KAAK,CAACC,OAAO;QACjCC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C;KACH,CAAC;EACN;EAAC,QAAAO,CAAA,G;qBAjDQzB,UAAU,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAV9B,UAAU;IAAA+B,OAAA,EAAV/B,UAAU,CAAAgC,IAAA;IAAAC,UAAA,EAFT;EAAM;;SAEPjC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}