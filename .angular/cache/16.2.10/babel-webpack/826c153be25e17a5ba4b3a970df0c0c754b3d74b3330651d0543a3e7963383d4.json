{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.urlApi = 'http://localhost:8080/api/skus';\n  }\n  getData() {\n    return this.http.get(this.urlApi);\n  }\n  getDataBySku(sku) {\n    return this.http.get(this.urlApi + \"/sku/\" + sku);\n  }\n  deleteproduct(id) {\n    let options = {\n      headers: new HttpHeaders({\n        \"Conten-type\": \"application/json\"\n      }),\n      body: {\n        \"sku\": 1234567,\n        \"article\": \"cama\",\n        \"stl_marca\": \"stilso\",\n        \"model\": \"spring\",\n        \"department\": \"hogxzar\",\n        \"clas\": 2,\n        \"family\": 1,\n        \"stock\": 10,\n        \"amount\": 200,\n        \"discontinued\": 0,\n        \"create_date\": \"2023-12-16\",\n        \"finish_date\": null\n      }\n    };\n    this.http.delete('http://localhost:8080/api/skus?id=1');\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ApiService };","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","urlApi","getData","get","getDataBySku","sku","deleteproduct","id","options","headers","body","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BRANDON\\Documents\\angular\\angularapi\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {Sku} from '../modelos/sku.interface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private urlApi = 'http://localhost:8080/api/skus';\n\n  constructor(private http: HttpClient) { }\n\n  public getData() : Observable<Sku[]> {\n    return this.http.get<Sku[]>(this.urlApi);\n  }\n\n  public getDataBySku(sku:number) : Observable<any> {\n    return this.http.get<any>(this.urlApi+ \"/sku/\" + sku);\n  }\n\n    public deleteproduct (id: number): void{\n      let options = {\n        headers: new HttpHeaders({\n          \"Conten-type\": \"application/json\"\n        }),\n        body: {\n          \"sku\": 1234567,\n          \"article\": \"cama\",\n          \"stl_marca\": \"stilso\",\n          \"model\": \"spring\",\n          \"department\": \"hogxzar\",\n          \"clas\": 2,\n          \"family\": 1,\n          \"stock\": 10,\n          \"amount\": 200,\n          \"discontinued\": 0,\n          \"create_date\": \"2023-12-16\",\n          \"finish_date\": null\n        }\n\n      }\n      this.http.delete<any>('http://localhost:8080/api/skus?id=1');\n      \n\n    }\n\n \n  \n\n}\n"],"mappings":"AAGA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAI5D,MAGaC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAET;EAEjCC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEOG,YAAYA,CAACC,GAAU;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,GAAE,OAAO,GAAGI,GAAG,CAAC;EACvD;EAESC,aAAaA,CAAEC,EAAU;IAC9B,IAAIC,OAAO,GAAG;MACZC,OAAO,EAAE,IAAIZ,WAAW,CAAC;QACvB,aAAa,EAAE;OAChB,CAAC;MACFa,IAAI,EAAE;QACJ,KAAK,EAAE,OAAO;QACd,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,QAAQ;QACrB,OAAO,EAAE,QAAQ;QACjB,YAAY,EAAE,SAAS;QACvB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,CAAC;QACX,OAAO,EAAE,EAAE;QACX,QAAQ,EAAE,GAAG;QACb,cAAc,EAAE,CAAC;QACjB,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE;;KAGlB;IACD,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,qCAAqC,CAAC;EAG9D;EAAC,QAAAC,CAAA,G;qBArCQd,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVnB,UAAU;IAAAoB,OAAA,EAAVpB,UAAU,CAAAqB,IAAA;IAAAC,UAAA,EAFT;EAAM;;SAEPtB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}